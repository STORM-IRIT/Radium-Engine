name: Code coverage

defaults:
  run:
    shell: bash

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
env:
  ext-dir: $GITHUB_WORKSPACE/external/install/

jobs:
  coverage:
    runs-on: ubuntu-20.04
    steps:
      - uses: seanmiddleditch/gha-setup-ninja@master
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: coverage-QtCache
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
      - name: Install deps
        run: sudo apt-get install -y lcov libxml2-utils
      - name: Prepare directories
        run: |
          mkdir -p install/
          mkdir -p src/Radium-Engine
          mkdir -p build/Radium-Engine
      - name: Checkout remote head
        uses: actions/checkout@master
        with:
          fetch-depth: 0
          path: src/Radium-Engine
      - name: Cache externals
        id: cache-external
        uses: actions/cache@v2
        with:
          path: external
          key: coverage-external-${{ hashFiles('src/Radium-Engine/external/**/CMakeLists.txt') }}
      - name: Configure and build external
        if: steps.cache-external.outputs.cache-hit != 'true'
        run: |
          mkdir -p external/install
          mkdir -p external/build
          cd external/build
          cmake ../../src/Radium-Engine/external -GNinja -DCMAKE_BUILD_TYPE=Debug -DRADIUM_ENABLE_TESTING=ON -DRADIUM_ENABLE_COVERAGE=ON -DCMAKE_CXX_COMPILER=g++-10 -DCMAKE_C_COMPILER=gcc-10 -DCMAKE_EXECUTE_PROCESS_COMMAND_ECHO=STDOUT -DRADIUM_UPDATE_VERSION=OFF -DRADIUM_EXTERNAL_CMAKE_INSTALL_MESSAGE=LAZY -DCMAKE_INSTALL_PREFIX=../install/
          cmake --build . --parallel --config Debug
      - name: Configure Radium
        run: |
          cd build/Radium-Engine
          cmake ../../src/Radium-Engine -GNinja -DCMAKE_BUILD_TYPE=Debug -DRADIUM_ENABLE_TESTING=ON -DRADIUM_ENABLE_COVERAGE=ON -DCMAKE_CXX_COMPILER=g++-10 -DCMAKE_C_COMPILER=gcc-10 -DCMAKE_INSTALL_PREFIX=../../install/ -DCMAKE_EXECUTE_PROCESS_COMMAND_ECHO=STDOUT -DRADIUM_UPDATE_VERSION=OFF -DRADIUM_EXTERNAL_CMAKE_INSTALL_MESSAGE=LAZY -DEigen3_DIR=${{env.ext-dir}}/share/eigen3/cmake/ -DOpenMesh_DIR=${{env.ext-dir}}/share/OpenMesh/cmake/ -Dcpplocate_DIR=${{env.ext-dir}}/share/cpplocate/ -Dglm_DIR=${{env.ext-dir}}/lib/cmake/glm/ -Dglbinding_DIR=${{env.ext-dir}}/share/glbinding/ -Dglobjects_DIR=${{env.ext-dir}}/share/globjects/ -Dstb_DIR=${{env.ext-dir}}/include/stb/ -Dassimp_DIR=${{env.ext-dir}}/lib/cmake/assimp-5.0/ -Dtinyply_DIR=${{env.ext-dir}}/lib/cmake/tinyply/
      - name: Build Radium
        run: |
          cd build/Radium-Engine
          cmake --build . --config Debug
      - name: Create and upload coverage report
        run: |
          cd build/Radium-Engine
          cmake --build . --config Debug --target lcov-init
          cmake --build . --config Debug --target lcov-zerocounter
          cmake --build . --config Debug --target check
          cmake --build . --config Debug --target lcov-capture
          # show report for debug
          cmake --build . --config Debug --target lcov-list
          # Uploading report to CodeCov
          bash <(curl -s https://codecov.io/bash) -f total.info -R ../../src/Radium-Engine || echo "Codecov did not collect coverage reports"
