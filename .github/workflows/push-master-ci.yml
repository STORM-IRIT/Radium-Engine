name: CI

defaults:
  run:
    shell: bash

on:
  push:
    branches:
      - master
      - release-candidate
env:
  ext-dir: $GITHUB_WORKSPACE/external/install/

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { name: "Windows MSVC", os: windows-latest, cc: "cl.exe", cxx: "cl.exe", icon: "Windows"}
          - { name: "Ubuntu gcc", os: ubuntu-latest, cc: "gcc-10", cxx: "g++-10", icon: "Linux" }
          - { name: "MacOS clang", os: macos-latest, cc: "clang", cxx: "clang++", icon: "Apple" }
        build-type:
          - Debug
          - Release
        precision:
          - { name: "double", value: "ON" }
          - { name: "float", value: "OFF"}
    steps:
      - uses: seanmiddleditch/gha-setup-ninja@master
      - name: Add msbuild to PATH
        uses: seanmiddleditch/gha-setup-vsdevenv@master
        if: runner.os == 'Windows'
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ matrix.config.name }}-QtCache
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
      - name: Prepare directories
        run: |
          mkdir -p install/
          mkdir -p src/Radium-Engine
          mkdir -p build/Radium-Engine
      - name: Checkout remote head
        uses: actions/checkout@master
        with:
          path: src/Radium-Engine
      - name: Cache externals
        id: cache-external
        uses: actions/cache@v2
        with:
          path: external
          key: ${{ matrix.config.name }}-${{ matrix.build-type }}-external-v1-${{ hashFiles('src/Radium-Engine/external/**/CMakeLists.txt') }}
      - name: Configure and build external
        if: steps.cache-external.outputs.cache-hit != 'true'
        run: |
          mkdir -p external/install/
          mkdir -p external/build/
          cd external/build/
          cmake ../../src/Radium-Engine/external  -GNinja -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }} -DCMAKE_C_COMPILER=${{ matrix.config.cc }} -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DCMAKE_EXECUTE_PROCESS_COMMAND_ECHO=STDOUT -DRADIUM_UPDATE_VERSION=OFF -DRADIUM_EXTERNAL_CMAKE_INSTALL_MESSAGE=LAZY -DCMAKE_INSTALL_PREFIX=../install/
          cmake --build . --parallel --config ${{ matrix.build-type }}
      - name: Configure Radium
        run: |
          cd build/Radium-Engine
          cmake ../../src/Radium-Engine -GNinja -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }} -DCMAKE_C_COMPILER=${{ matrix.config.cc }} -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DRADIUM_USE_DOUBLE=${{ matrix.precision.value }} -DCMAKE_INSTALL_PREFIX=../../install/ -DCMAKE_EXECUTE_PROCESS_COMMAND_ECHO=STDOUT -DRADIUM_UPDATE_VERSION=OFF -DRADIUM_EXTERNAL_CMAKE_INSTALL_MESSAGE=LAZY -DRADIUM_INSTALL_DOC=OFF -DRADIUM_ENABLE_TESTING=ON -DEigen3_DIR=${{env.ext-dir}}/share/eigen3/cmake/ -DOpenMesh_DIR=${{env.ext-dir}}/share/OpenMesh/cmake/ -Dcpplocate_DIR=${{env.ext-dir}}/share/cpplocate/ -Dglm_DIR=${{env.ext-dir}}/lib/cmake/glm/ -Dglbinding_DIR=${{env.ext-dir}}/share/glbinding/ -Dglobjects_DIR=${{env.ext-dir}}/share/globjects/ -Dstb_DIR=${{env.ext-dir}}/include/stb/ -Dassimp_DIR=${{env.ext-dir}}/lib/cmake/assimp-5.0/ -Dtinyply_DIR=${{env.ext-dir}}/lib/cmake/tinyply/
      - name: Build Radium
        run: |
          cd build/Radium-Engine
          cmake --build . --parallel --config ${{ matrix.build-type }} --target install
      - name: Install tests dep
        if: runner.os == 'Linux'
        run: sudo apt-get install -y libxml2-utils
      - name: Run unit tests
        if: runner.os != 'Windows'
        run: |
          cd build/Radium-Engine
          cmake --build . --parallel --config ${{ matrix.build-type }} --target check
      - name: Update badge on merge (failure)
        if: ${{ failure() && github.ref == 'refs/heads/master'  }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_BADGES_TOKEN }}
          gistID: ${{ secrets.GIST_BADGES_SECRET }}
          filename: "${{ matrix.config.os }}.${{ matrix.build-type }}.${{ matrix.precision.name }}.json"
          label: CI ${{ matrix.build-type }}  ${{ matrix.precision.name }}
          message: 'falling'
          namedLogo: ${{ matrix.config.icon }}
          logoColor: white
          color: CC1B1B
      - name: Update badge on merge (success)
        if: ${{ success() && github.ref == 'refs/heads/master'  }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_BADGES_TOKEN }}
          gistID: ${{ secrets.GIST_BADGES_SECRET }}
          filename: "${{ matrix.config.os }}.${{ matrix.build-type }}.${{ matrix.precision.name }}.json"
          label: CI ${{ matrix.build-type }}  ${{ matrix.precision.name }}
          message: 'passing'
          namedLogo: ${{ matrix.config.icon }}
          logoColor: white
          color: 1BCC1B
