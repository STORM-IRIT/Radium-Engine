
# -------------- Configuration of the Radium Engine targets and definitions -----------------------
# Setup Engine and check for dependencies

# TODO: verify if this is needed
if (Engine_FOUND AND NOT TARGET Engine)
    set(CONFIGURE_ENGINE ON)
    # verify dependencies
    if(NOT Core_FOUND)
        if(EXISTS "${CMAKE_CURRENT_LIST_DIR}/../Core/RadiumCoreConfig.cmake")
            set(Core_FOUND TRUE)
            include(${CMAKE_CURRENT_LIST_DIR}/../Core/RadiumCoreConfig.cmake)
        else()
            set(Radium_FOUND False)
            set(Radium_NOTFOUND_MESSAGE "Radium::Engine: dependency Core not found")
            set(CONFIGURE_ENGINE OFF)
        endif()
    endif()
endif()

# configure Engine component
if(CONFIGURE_ENGINE)
    # Theses paths reflect the paths founds in RadiumEngine/external/Engine/package
    set(_base_external_dir "${CMAKE_CURRENT_LIST_DIR}/../../../../")
    if("@glm_DIR@" STREQUAL "")
        set(glm_DIR "${_base_external_dir}/@glm_sub_DIR@")
    else()
        set(glm_DIR "@glm_DIR@")
    endif()
    if("@glbinding_DIR@" STREQUAL "")
        set(glbinding_DIR "${_base_external_dir}/@glbinding_sub_DIR@")
    else()
        set(glbinding_DIR "@glbinding_DIR@")
    endif()
    if("@globjects_DIR@" STREQUAL "")
        set(globjects_DIR "${_base_external_dir}/@globjects_sub_DIR@")
    else()
        set(globjects_DIR "@globjects_DIR@")
    endif()
    if("@tinyEXR_DIR@" STREQUAL "")
        set(tinyEXR_DIR "${_base_external_dir}/@tinyEXR_sub_DIR@")
    else()
        set(tinyEXR_DIR "@tinyEXR_DIR@")
    endif()
    find_dependency(glm REQUIRED NO_DEFAULT_PATH)
    find_dependency(glbinding REQUIRED NO_DEFAULT_PATH)
    find_dependency(globjects REQUIRED NO_DEFAULT_PATH)
    find_dependency(tinyEXR REQUIRED NO_DEFAULT_PATH)
    if(MSVC OR MSVC_IDE OR MINGW)
        add_imported_dir(FROM glbinding::glbinding TO RADIUM_EXTERNAL_DLLS_LOCATION)
        add_imported_dir(FROM globjects::globjects TO RADIUM_EXTERNAL_DLLS_LOCATION)
    endif()
    include("${CMAKE_CURRENT_LIST_DIR}/EngineTargets.cmake")
endif()
