# -------------- Configuration of the Radium Core targets and definitions ------------0---------
if(NOT TARGET Core)
    include(CMakeFindDependencyMacro)
    find_dependency(Threads REQUIRED)
    if(@OPENMP_FOUND@) # Indicates if OpenMP has been used when compiling the Radium libraries
        find_dependency(OpenMP REQUIRED)
    endif()
    # Theses paths reflect the paths founds in RadiumEngine/external/Core/package
    set(_BaseExternalDir_ "${CMAKE_CURRENT_LIST_DIR}/../../../../")
    if("@Eigen3_DIR@" STREQUAL "")
        set(Eigen3_DIR "${_BaseExternalDir_}/@Eigen3_sub_DIR@")
    else()
        set(Eigen3_DIR "@Eigen3_DIR@")
    endif()
    if("@OpenMesh_DIR@" STREQUAL "")
        set(OpenMesh_DIR "${_BaseExternalDir_}/@OpenMesh_sub_DIR@")
    else()
        set(OpenMesh_DIR "@OpenMesh_DIR@")
    endif()
    if("@cpplocate_DIR@" STREQUAL "")
        set(cpplocate_DIR "${_BaseExternalDir_}/@cpplocate_sub_DIR@")
    else()
        set(cpplocate_DIR "@cpplocate_DIR@")
    endif()
    if("@nlohmann_json_DIR@" STREQUAL "")
        set(nlohmann_json_DIR "${_BaseExternalDir_}/@nlohmann_json_sub_DIR@")
    else()
        set(nlohmann_json_DIR "@nlohmann_json_DIR@")
    endif()
    set(RadiumExternalDlls_location "")

    find_dependency(Eigen3 REQUIRED NO_DEFAULT_PATH)
    find_dependency(OpenMesh REQUIRED NO_DEFAULT_PATH)
    find_dependency(cpplocate REQUIRED NO_DEFAULT_PATH)
    find_dependency(nlohmann_json REQUIRED NO_DEFAULT_PATH)
    if(MSVC OR MSVC_IDE OR MINGW)
        add_imported_dir(FROM cpplocate::cpplocate TO RadiumExternalDlls_location)
    endif()
    include("${CMAKE_CURRENT_LIST_DIR}/CoreTargets.cmake")
endif(NOT TARGET Core)
