language: cpp
dist: bionic
sudo: true

script:
  - make -j 4
  - make check
  - |
    if [ "$BUILD_DOC" = "On" ]; then
        make RadiumDoc
    fi;
  # test ExamplePluginWithLib
  - make ExamplePluginWithLib
  # test relocatable binaries (command line tools)
  - |
    make RadiumExampleApps && make -s install
    export RETURN_PATH=$PWD
    export CORE_EXAMPLE_APP_PATH="bin/"
  - cd installed/$CORE_EXAMPLE_APP_PATH && ./CoreExampleApp && cd $RETURN_PATH
  - mv installed/ installed_moved
  - cd installed_moved/$CORE_EXAMPLE_APP_PATH && ./CoreExampleApp && cd ../..
  - mv installed_moved/ installed

notifications:
   slack: storm-cg:oxJ5LToK0qfPBkNW0Hus3TQg

cache:
  directories:

env:
  global:
    - OMP_NUM_THREADS=4
    - TIMEOUT=1000


before_install:
  - export CHECKOUT_PATH=`pwd`;
  - eval "${MATRIX_EVAL}"
  - if [ -n "$GCC_VERSION" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}"; fi
  - export Radium_RELEASE_NAME="Radium-Engine-${APPVEYOR_REPO_TAG}-${TRAVIS_OS_NAME}-${CXX}"
  - $CXX --version
  ############################################################################
  # Install a recent cmake
  # (see https://travis-ci.community/t/install-cmake-using-apt-again/4062)
  ############################################################################
  - |
    if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | sudo apt-key add -
      sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main'
      sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic-rc main'
      sudo apt update
      sudo apt install cmake
    fi;

  ############################################################################
  # Install a recent Qt
  ############################################################################
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update && brew install qt; fi
  - |
    if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      sudo add-apt-repository --yes ppa:beineri/opt-qt-5.11.0-bionic
      sudo apt-get --yes update
      sudo apt-get --yes install qt511-meta-minimal qt511svg
      source /opt/qt511/bin/qt511-env.sh # see https://launchpad.net/~beineri/+archive/ubuntu/opt-qt-5.11.0-bionic
    fi;


matrix:
  include:
    # mac clang Release
    - env:
        - BUILD_TYPE=Release
        - PREFIX_PATH="/usr/local/opt/qt/lib/cmake"
        - CMAKE="cmake"
        - BUILD_DOC=Off
        - MATRIX_EVAL=""
      os: osx
      compiler: clang

    # linx clang Release
    - env:
        - BUILD_TYPE=Release
        - PREFIX_PATH="~/Qt/5.11.0/gcc_64/lib/cmake"
        - CMAKE="/usr/bin/cmake"
        - CLANG_VERSION=5.0
        - BUILD_DOC=Off
        - MATRIX_EVAL=""
      os: linux
      addons: &clang50
        apt:
          packages:
            - util-linux
            - clang-5.0
            - g++-7
            - libgl1-mesa-dev
          sources:
            - ubuntu-toolchain-r-test

    # linx gcc Release
    - env:
        - BUILD_TYPE=Release
        - PREFIX_PATH="~/Qt/5.11.0/gcc_64/lib/cmake"
        - CMAKE="/usr/bin/cmake"
        - GCC_VERSION=7
        - BUILD_DOC=On
        - MATRIX_EVAL=""
      os: linux
      addons: &gcc7
        apt:
          packages:
            - g++-7
            - doxygen
            - graphviz
            - libgl1-mesa-dev
          sources:
            - ubuntu-toolchain-r-test


install:
  - cd $CHECKOUT_PATH

  - mkdir -p build
  - cd build
  - ${CMAKE} --log-level=WARNING  .. -DCMAKE_INSTALL_MESSAGE=LAZY -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_PREFIX_PATH=${PREFIX_PATH} -DCMAKE_INSTALL_PREFIX=./installed -DRADIUM_IO_ASSIMP=ON -DRADIUM_UPDATE_VERSION=OFF -DCMAKE_EXECUTE_PROCESS_COMMAND_ECHO=STDOUT 


# safelist
branches:
  except:
  - gh-pages

before_deploy:
  - zip --symlinks -r ${CHECKOUT_PATH}/build/${Radium_RELEASE_NAME}.zip ${CHECKOUT_PATH}/build/installed/

deploy:
  - provider: pages
    skip_cleanup: true
    local_dir: build/installed/share/doc/html/
    github_token: $GITHUB_API_KEY
    on:
      branch: master
      condition: "$BUILD_DOC = On"
  - provider: releases
    api_key: "GITHUB OAUTH TOKEN"
    file: build/${Radium_RELEASE_NAME}.zip
    skip_cleanup: true
    draft: true
    on:
      tags: true

