language: cpp
dist: xenial
sudo: true

script:
  - make -j 4
  - make buildtests && make test
  - |
    if [ "$TRAVIS_EVENT_TYPE" = "cron" ] ; then
        cd $CHECKOUT_PATH
        export BUILD_DOC="Off"
        if ! .ci/compile-official-plugins.sh ; then
            echo "Plugins compilation have failed. Aborting..."
            exit 1
        fi;
    else
        if [ "$BUILD_DOC" = "On" ]; then
          make doc
        fi;
    fi;

notifications:
   slack: storm-cg:oxJ5LToK0qfPBkNW0Hus3TQg

cache:
  directories:

env:
  global:
    - OMP_NUM_THREADS=4
    - TIMEOUT=1000


before_install:
  - export CHECKOUT_PATH=`pwd`;
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
        #attempt to fix SSL issue with Qt:
        # ==> Downloading https://homebrew.bintray.com/bottles/qt-5.10.1.sierra.bottle.tar.gz
        # curl: (56) SSLRead() return error -9806
        # Error: Failed to download resource "qt"
        #
        # Source:
        # https://gist.github.com/entropiae/a899d8a78dc8a38f505e
        brew remove curl
        brew install openssl
        brew install --with-openssl curl
        brew install --with-curl --with-openssl qt
        brew install gnu-which --with-default-names
    fi;
  - eval "${MATRIX_EVAL}"
  - if [ -n "$GCC_VERSION" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}"; fi
  - which $CXX
  - which $CC
  - $CXX --version
  - cmake --version

  ############################################################################
  # Install a recent Qt
  ############################################################################
  - |
    if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      sudo add-apt-repository --yes ppa:beineri/opt-qt-5.10.1-xenial
      sudo apt-get --yes update
      sudo apt-get --yes install qt510-meta-minimal qt510svg
      source /opt/qt510/bin/qt510-env.sh # see https://launchpad.net/~beineri/+archive/ubuntu/opt-qt-5.10.1-xenial
    fi;


matrix:
  include:
    # mac clang Release
    - env:
        - BUILD_TYPE=Release
        - PREFIX_PATH="/usr/local/opt/qt/lib/cmake"
        - BUILD_DOC=Off
        - MATRIX_EVAL=""
      os: osx
      compiler: clang

    # linx clang Release
    - env:
        - BUILD_TYPE=Release
        - PREFIX_PATH="~/Qt/5.10.0/gcc_64/lib/cmake"
        - CLANG_VERSION=5.0
        - BUILD_DOC=Off
        - MATRIX_EVAL=""
      os: linux
      addons: &clang50
        apt:
          packages:
            - util-linux
            - clang-5.0
            - g++-7
            - cmake
            - libgl1-mesa-dev
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-5.0

    # linx gcc Release
    - env:
        - BUILD_TYPE=Release
        - PREFIX_PATH="~/Qt/5.10.0/gcc_64/lib/cmake"
        - GCC_VERSION=7
        - BUILD_DOC=On
        - MATRIX_EVAL=""
      os: linux
      addons: &gcc7
        apt:
          packages:
            - g++-7
            - cmake
            - doxygen
            - graphviz
            - libgl1-mesa-dev
          sources:
            - ubuntu-toolchain-r-test


install:
  - cd $CHECKOUT_PATH

  - mkdir -p build
  - cd build
  - cmake .. -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_PREFIX_PATH=${PREFIX_PATH}


# safelist
branches:
  except:
  - gh-pages

deploy:
  provider: pages
  skip_cleanup: true
  local_dir: Bundle-GNU/Docs/html/
  github_token: $GITHUB_API_KEY
  on:
    branch: master-v1
    condition: "$BUILD_DOC = On"

